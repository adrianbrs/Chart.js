(window.webpackJsonp=window.webpackJsonp||[]).push([[215],{551:function(n,t,a){"use strict";a.r(t);var o=a(3),i=Object(o.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"navigation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#navigation"}},[n._v("#")]),n._v(" Navigation")]),n._v(" "),t("p",[n._v("This sample shows how to use legend navigation to handle overflow.")]),n._v(" "),t("chart-editor",{attrs:{code:"\n// <block:setup:1>\nconst DATA_COUNT = 100;\nconst NUMBER_CFG = {count: DATA_COUNT, decimals: 0};\nconst LABEL_CFG = {count: DATA_COUNT, prefix: 'Group ', min: 1, max: DATA_COUNT + 1};\n\nconst data = {\n  labels: Utils.labels(LABEL_CFG),\n  datasets: [{\n    label: '# of Votes',\n    data: Utils.numbers(NUMBER_CFG),\n    backgroundColor: Object.values(Utils.CHART_COLORS),\n  }]\n};\n// </block:setup>\n\n// <block:config:0>\nconst config = {\n  type: 'pie',\n  data: data,\n  options: {\n    plugins: {\n      legend: {\n        position: 'right',\n        align: 'start',\n        title: {\n          display: true,\n          text: 'Chart.js Legend Navigation Example',\n          position: 'start',\n        },\n        navigation: {\n          display: 'auto',\n          maxCols: 1,\n          maxRows: 3,\n          arrowSize: 12,\n          align: 'start',\n          grid: true\n        }\n      },\n    }\n  }\n};\n// </block:config>\n\n// <block:actions:2>\nconst actions = [\n  {\n    name: 'Toggle',\n    handler(chart) {\n      const {navigation} = chart.options.plugins.legend;\n      navigation.display = navigation.display ? false : 'auto';\n      chart.update();\n    }\n  },\n  {\n    name: '+ Label',\n    handler(chart) {\n      console.log(chart);\n      const lastLabel = chart.data.labels[chart.data.labels.length - 1] || '';\n      const lastIndex = +lastLabel.substring(6);\n      chart.data.labels.push(LABEL_CFG.prefix + (lastIndex + 1));\n      chart.update();\n    }\n  },\n  {\n    name: '- Label',\n    handler(chart) {\n      chart.data.labels.pop();\n      chart.update();\n    }\n  },\n  {\n    name: 'Position: left',\n    handler(chart) {\n      chart.options.plugins.legend.position = 'left';\n      chart.update();\n    }\n  },\n  {\n    name: 'Position: top',\n    handler(chart) {\n      chart.options.plugins.legend.position = 'top';\n      chart.update();\n    }\n  },\n  {\n    name: 'Position: right',\n    handler(chart) {\n      chart.options.plugins.legend.position = 'right';\n      chart.update();\n    }\n  },\n  {\n    name: 'Position: bottom',\n    handler(chart) {\n      chart.options.plugins.legend.position = 'bottom';\n      chart.update();\n    }\n  },\n  {\n    name: 'Toggle grid',\n    handler(chart) {\n      chart.options.plugins.legend.navigation.grid = !chart.options.plugins.legend.navigation.grid;\n      chart.update();\n    }\n  },\n];\n// </block:actions>\n\nmodule.exports = {\n  config,\n  actions\n};\n"}}),t("h2",{attrs:{id:"docs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docs"}},[n._v("#")]),n._v(" Docs")]),n._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/charts/doughnut.html"}},[n._v("Doughnut and Pie Charts")])],1),n._v(" "),t("li",[t("RouterLink",{attrs:{to:"/configuration/legend.html"}},[n._v("Legend")]),n._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/configuration/legend.html#legend-navigation-configuration"}},[n._v("Navigation")])],1)])],1)])],1)}),[],!1,null,null,null);t.default=i.exports}}]);